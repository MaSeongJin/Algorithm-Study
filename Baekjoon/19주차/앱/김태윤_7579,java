package Week19;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class 김태윤_7579 {
    static int n, m;
    static int[] memory;
    static int[] cost;
    static int[] dp;
    public static void main(String[] args) throws IOException {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer(br.readLine());
        n=Integer.parseInt(st.nextToken());
        m=Integer.parseInt(st.nextToken());
        memory=new int[n];
        cost=new int[n];
        st=new StringTokenizer(br.readLine());
        for(int i=0;i<n;i++){
            memory[i]=Integer.parseInt(st.nextToken());
        }
        st=new StringTokenizer(br.readLine());
        int costSum=0;
        for(int i=0;i<n;i++){
            cost[i]=Integer.parseInt(st.nextToken());
            costSum+=cost[i];
        }
        dp=new int[costSum+1];
        for(int i=0;i<n;i++){
            for(int j=costSum;j>=cost[i];j--){
                dp[j]=Math.max(dp[j-cost[i]]+memory[i], dp[j]);
            }
        }
        for(int i=0;i<=costSum;i++){
            if(dp[i]>=m){
                System.out.println(i);
                return;
            }
        }
    }
}
